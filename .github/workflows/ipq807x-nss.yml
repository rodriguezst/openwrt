name: Build IPQ807x NSS
on:
  workflow_dispatch:
  push:

jobs:
    build:
        name: Prepare and build IPQ807x NSS generic images
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a -f -p nss_packages
            - name: Generate config for IPQ807x NSS Generic
              run: |
                cp config.buildinfo .config
                make defconfig
            - name: Enable WiFi on default config
              run: |
                mkdir -p files/etc/uci-defaults
                cat > files/etc/uci-defaults/xxx_config << EOF
                uci set wireless.radio1.disabled=0
                uci commit
                EOF
            - name: Download package sources
              run: make download V=s
            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s
            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s
            - name: Build target images
              run: |
                make -j$(nproc) V=s || \
                make V=s
            - name: Remove packages
              run: rm -rf bin/targets/ipq807x/generic/packages

            - name: TAR output
              run: tar -cvf ipq807x-images.tar bin/targets/ipq807x/generic

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                name: ipq807x-images
                path: ipq807x-images.tar

    release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: build

          steps:
            - name: Download the image artifacts
              uses: actions/download-artifact@v3
              with:
                name: ipq807x-images

            - name: Extract the image artifacts
              run: tar xf ipq807x-images.tar

            - name: Get the current date
              run: echo "NOW=$(date +%F-%H%M)" >> $GITHUB_ENV

            - name: Extract version information from version.buildinfo
              run: echo "BUILDINFO=$(cat bin/targets/ipq807x/generic/version.buildinfo)" >> $GITHUB_ENV

            - name: Create a release
              uses: "ncipollo/release-action@v1"
              with:
                name: "ipq807x-nss-${{ env.BUILDINFO }}"
                tag: "ipq807x-${{ env.NOW }}"
                commit: "${{ github.sha }}"
                generateReleaseNotes: true
                prerelease: true
                artifacts: bin/targets/ipq807x/generic/*
